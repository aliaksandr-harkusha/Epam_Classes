Книга - Эдгар Гёрдан - что станет с американским программистом

объект - именная сущность обладающая данными и поведением

объекты обмниваются сообщениями

Полиморфизм - способность предка вызвать объект потомка даже если вызов идёт через интерфейс предка


class A{
m1(){"Class A"};
}

class B extends B{
m1(){"Class B"};
}

A a = new B();
a.m1(); -> даст Class B.

https://ru.stackoverflow.com/questions/277049/%D0%A2%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0-%D0%B2%D0%B8%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D1%85-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B9
https://ru.wikipedia.org/wiki/%D0%A2%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0_%D0%B2%D0%B8%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D1%85_%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%BE%D0%B2
https://ru.wikipedia.org/wiki/%D0%A0%D1%8F%D0%B4_%D0%A2%D0%B5%D0%B9%D0%BB%D0%BE%D1%80%D0%B0

UML
Есть 6 типов связи между объектами
1) Наследование (Иерархическая - предок к потомку)
2) Реализация (От интерфейса или абстрактного класса к классу)
3) Ассоциация 
4) Зависимость (Объект Б зависит от А или объект А может повлиять на Б) - редкий
5) Аггрегация - включает в себя (человек и ноги - человек может без ног) - на графике пустой ромб
6) Композиция - состоит из (человек и клетки - человек не может быть без клеток) - на графике заштрихованый ромб

Запросы приходящие - GET, POST, PUT
Использовать MVC 
В контролере нужен Common Factory. Сделать HashMap, который по запросу с браузера (например login(будет key)) 
ищет подходящий метод (будет value). Контроллер по ключу выкидывает метод обработки запроса. Для логина мы будем брать данные с базы данных
и сравнивать их с введёнными данными пользователями - Get Username by ID and PASSWORD - если есть, то логиним, если нет, то шлём в попу.
Сделать свои эксепшены
Везде дописать комментарии

